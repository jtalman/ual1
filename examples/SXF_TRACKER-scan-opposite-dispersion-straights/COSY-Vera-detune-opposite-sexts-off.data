# COSY-Vera-detune.data   continued from    COSY-Vera-mx05-mx06.data
# -------------------------------------------------------------------------------
# Thu Apr 23 09:39:51 EDT 2020
# double Delta_delta = 0.000652;   // fractional momentum step size
# double x_nom = 0.005; // 0.005;      // nominal horizontal amplitude 
# double y_nom = 0.005; // 0.005;      // nominal vertical amplitude 
#                     --------------
#  Fri Apr 24 16:59:20 EDT 2020
-1.200001  0.200000   -8.9669    -8.9715        4.4812    0.0000        -8.9692    2.2406
-1.200001  0.350000   0.0000    4.4858        17.9339    13.4527        2.2429    15.6933
-1.400001  0.350000   4.4858    0.0000        8.9669    4.4536        2.2429    6.7103
#  Fri Apr 24 16:59:20 EDT 2020
# Mon Apr 27 18:38:31 EDT 2020
#  int turns = 8192;
#  double Delta_delta = 0.0001; 
#   double x_nom = 0.00001;  
#  double y_nom = 0.00001;  
#    mx06          mx05
#  MXL              MXS                Qx-0             Qy-0                   Qx-1             Qy-1                Qx-2         Qy-2     
-0.400000  0.600000   -12.8908    -12.3303        15.1327    15.1327        -12.6106    15.1327
-0.800000  0.200000   -21.8583    -21.2978        -5.0442    -6.1652        -21.5781    -5.6047
0.133730  -0.504860   -3.3628    -2.8023        10.6489    10.0885        -3.0826    10.3687
0.073315  -0.321661   -4.4837    -3.9233        12.3303    11.7699        -4.2035    12.0501
#                          --------------
# Wed Apr 29 14:31:37 EDT 2020 
 
#   mx_06        mx_05
#     MXL       MXS       xi_x_mi    xi_x_pl      xi_y_mi       xi_y_pl        xi_x           xi_y
#     MXL            MXS                   Qx-0           Qy-0              Qx-1              Qy-1            Qx-2            Qy-2  
0.073315  -0.321661   -5.0442    -4.4837        15.1327    15.1327        -4.7640    15.1327
 #                          --------------
# Thu Apr 30 10:33:08 EDT 2020
#  int turns = 8192;
#  double Delta_delta = 0.0001; 
#   double x_nom = 0.00001;  
#  double y_nom = 0.00001;  
# ------------------------------------------------------------------------------------------------------------------------
#     name             suml                    betax           alfax              qx               dx               betay          alfay          qy              dy        
# ------------------------------------------------------------------------------------------------------------------------
#  128 mx05         5.7634035e+01  1.399e+01  2.237e+00  1.152e+00  8.987e+00  9.915e+00 -1.653e+00  1.346e+00  0.000e+00
#  142 mx06         6.3221131e+01  3.857e+00 -1.997e-01  1.318e+00  1.761e+01  2.035e+01 -5.263e-02  1.399e+00  0.000e+00
#                          --------------
#   mx05     mx06      xi_x_mi    xi_x_pl      xi_y_mi       xi_y_pl        xi_x           xi_y
#     mx05           mx06                  Qx-0           Qy-0                Qx-1              Qy-1               Qx-2            Qy-2  
-0.321661  0.073315   -6.7256    -6.1652        14.0118    14.0118        -6.4454    14.0118
 #                          --------------
-0.400000  0.600000   -7.2861    -6.1652        14.0118    14.0118        -6.7256    14.0118
-0.800000  0.200000   -6.7256    -6.1652        14.0118    14.0118        -6.4454    14.0118
# COSY-Vera-mx05-mx06.data
# -------------------------------------------------------------------------------
# Thu Apr 23 09:39:51 EDT 2020
# double Delta_delta = 0.000652;   // fractional momentum step size
# double x_nom = 0.005; // 0.005;      // nominal horizontal amplitude 
# double y_nom = 0.005; // 0.005;      // nominal vertical amplitude 
#                     --------------
#  Fri Apr 24 16:59:20 EDT 2020
-1.200001  0.200000   -8.9669    -8.9715        4.4812    0.0000        -8.9692    2.2406
-1.200001  0.350000   0.0000    4.4858        17.9339    13.4527        2.2429    15.6933
-1.400001  0.350000   4.4858    0.0000        8.9669    4.4536        2.2429    6.7103
#  Fri Apr 24 16:59:20 EDT 2020
#                     --------------
#Thu Apr 30 13:31:27 EDT 2020
# double Delta_delta_e = 0.001;   // fractional energy step size
#  so Delta_delta = 0.001/beta = 0.001/0.459 = 0.00218;
# Process using "/home/talman/UAL/Chromaticity/maple/COSY-chromaticity-deuteron-mx05-mx06.mwFIRST-TRY"
# Convert from FFT's to chromaticities using "perl/FFT-to-chromaticity-conversion.pl"
#  
#  double x_nom = 0.0002; //  0.00001;  // 0.005;      // nominal horizontal amplitude 
#  double y_nom = 0.0002; //  0.00001;  // 0.005;      // nominal vertical amplitude 
#   mx05     mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
#  MXS              MXS                Qx-0             Qy-0                   Qx-1             Qy-1                Qx-2         Qy-2     
0.073315  -0.321661   -10.0884    -9.5280        30.2654    29.7049        -9.8082    29.9851
-0.400000  0.600000   -14.0118    -13.4513        31.9468    31.3863        -13.7315    31.6666
-0.800000  0.200000   -18.4955    -17.9350        21.2978    21.2978        -18.2153    21.2978
0.473315  -0.921661   -6.7256    -6.1652        30.8258    30.2654        -6.4454    30.5456
#                     --------------
# Thu Apr 30 19:24:59 EDT 2020
# Process using "/home/talman/UAL/Chromaticity/maple/COSY-chromaticity-deuteron-mx05-mx06.mw
# double Delta_delta_e = 0.001;   // fractional energy step size
#  so Delta_delta = 0.001/beta = 0.001/0.459 = 0.00218;
# Process using "/home/talman/UAL/Chromaticity/maple/COSY-chromaticity-deuteron-mx05-mx06.mwFIRST-TRY"
# Convert from FFT's to chromaticities using "perl/FFT-to-chromaticity-conversion.pl"
#  
#  double x_nom = 0.0002; //  0.00001;  // 0.005;      // nominal horizontal amplitude 
#  double y_nom = 0.0002; //  0.00001;  // 0.005;      // nominal vertical amplitude 
#   mx05     mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
#  MXS              MXS                Qx-0             Qy-0                   Qx-1             Qy-1                Qx-2         Qy-2     
0.073315  -0.321661   -6.7256    -6.1652        30.8258    30.2654        -6.4454    30.5456
-0.320000  0.073000   -13.4512    -12.8908        28.0235    27.4630        -13.1710    27.7433
#                     --------------
# Fri May  1 10:31:59 EDT 2020
#
# At this point I realized that the aliasing correction factors in " FFT-to-chromaticity-conversion.pl" were messing things up.
#  When this "COSY-Vera-mx05-mx06.data" is processed by  " FFT-to-chromaticity-conversion.pl" it will mess up preceeding entries
# $xi_x_fac = 1;   // -1;  // This factor can be introduced later, in order to supply
# $xi_y_fac = 1;   // -1;  // the "aliasing" correction for fractional tunes greater than 0.5.
#
#  double Delta_delta_e = 0.0002;   // fractional energy step size
# // so Delta_delta = 0.0002/beta = 0.0002/0.459 = 0.000436;
#
#  double x_nom = 0.001; //  0.00001;  // 0.005;      // nominal horizontal amplitude 
#  double y_nom = 0.001; //  0.00001;  // 0.005;      // nominal vertical amplitude 
#
##   double Dx_nom = 0.0; 
##  double Dxp_nom =  0.0; 
##                  --------------------
## Process using "/home/talman/UAL/Chromaticity/maple/COSY-chromaticity-deuteron-mx05-mx06.mwFIRST-TRY"
## Convert from FFT's to chromaticities using "perl/FFT-to-chromaticity-conversion.pl"
##  
##  double x_nom = 0.001; //  0.00001;  // 0.005;      // nominal horizontal amplitude 
##  double y_nom = 0.001; //  0.00001;  // 0.005;      // nominal vertical amplitude 
##   mx05     mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
##  MXS              MXL                Qx-0             Qy-0                  Qx-1             Qy-1                 Qx-2           Qy-2     
#   0.073315     -0.321661      0.4074707   0.26672363     0.40527344  0.27331543     0.40332031  0.27978516
#   0.0000001   0.0000001     0.40759277 0.26623535     0.40527344  0.27331543     0.40307617  0.28015137
#   0.1000001   0.0000001     0.40734863 0.26599121     0.40527344  0.27331543     0.40332031  0.28051758
#   0.0000001   1.0000001 ???    0.40759277 0.26611328     0.40527344  0.27331543     0.40307617  0.28039551
#      0.4785         -2.578         0.40722656 0.2701416       0.40527344  0.27331543     0.40356445  0.27661133
# dxi_xBy_dmx05 =  (-4.6196+5.1796)/0.1 = 0.56/0.1 = 5.6
# dxi_yBy_dmx05 =  (16.6587-15.9587)/0.1 = 0.7/0.1 = 7.0
# dxi_xBy_dmx06 =  (-5.1796+5.1796)/0.1 =0.0/0.1 = 0.0
# dxi_yBy_dmx06 =  ( 16.3787-15.9587)/0.1 = 0.42/0.1 = 4.2 
# xi_x00 := -5.1796;
# xi_y00 := 14.9788;
# xi_00 := <-5.1796,14.9788>;
# xi_x_targ := 0.0;
# xi_y_targ := 0.0;
# xi_targ := <0,0>;
# M_emp := <<5.6, 0> | <7.0, 4.2>>;
# M_empi := MatrixInverse(M_emp);
# del_sc := -M_empi.xi_00;
# sf_00 := <0.0, 0.0>;
# xi_x00 := -5.1796;
# xi_y00 := 14.9788;
# xi_00 := <-5.1796,14.9788>;
# xi_x_targ := -2.5;
# xi_y_targ :=  7.5;
# xi_targ := <-2.5, 7.5>;
# M_emp := <<5.6, 7.0> | <0.0, 4.2>>;
# M_empi := MatrixInverse(M_emp);
# sf := sf_00 + M_empi.(-xi_00 + xi_targ);
# 
#                                   [0.]
#                          sf_00 := [  ]
#                                   [0.]
#                        xi_x00 := -5.1796
#                        xi_y00 := 14.9788
#                             [&uminus0;5.1796]
#                    xi_00 := [               ]
#                             [    14.9788    ]
#                        xi_x_targ := -2.5
#                         xi_y_targ := 7.5
#                               [&uminus0;2.5]
#                    xi_targ := [            ]
#                               [    7.5     ]
#                                [5.6  0. ]
#                       M_emp := [        ]
#                                [7.0  4.2]
#              [    0.178571428571429              0.        ]
#    M_empi := [                                             ]
#              [&uminus0;0.297619047619048  0.238095238095238]
#                      [    0.478500000000000    ]
#                sf := [                         ]
#                      [&uminus0;2.57816666666667]
#--------------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------------
# Sat May  2 12:32:00 EDT 2020
 double Delta_delta_e = 0.0005;   // fractional energy step size
  // so Delta_delta = 0.0005/beta = 0.0005/0.459 = 0.0010893;

  double x_nom = 0.00001; //  0.00001;  // 0.005;      // nominal horizontal amplitude 
  double y_nom = 0.00001; //  0.00001;  // 0.005;      // nominal vertical amplitude 

  double Dx_nom = 0.0; 
  double Dxp_nom =  0.0; 
#                     --------------
$xi_x_fac = 1;   # -1;  // This factor can be introduced later, in order to supply
$xi_y_fac = 1;   # -1;  // the "aliasing" correction for fractional tunes greater than 0.5.
#   mx05     mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
#  MXS              MXL                Qx-0             Qy-0                  Qx-1             Qy-1                 Qx-2           Qy-2     
0.478500  -2.578000   -8.9675    -7.8466        14.5722    15.1327        -8.4070    14.8525
0.578500  -2.578000   -19.6164    -17.3746        43.1562    45.9585        -18.4955    44.5573
0.478500  -2.478000   -21.8583    -19.6164        40.9143    44.2771        -20.7374    42.5957
0.588981  -2.620900   0.0000    0.0000        0.0000    0.0000        0.0000    0.0000
#                     --------------
# dxi_xBy_dmx05 =  (-3.6981+1.6809)/0.1 = -2.0142/0.1 = -20.142
# dxi_yBy_dmx05 =  (8.9090 - 2.9697)/0.1 =5.9393 /0.1 = 59.393
# dxi_xBy_dmx06 =  (-4.1463+1.6809)/0.1 = -2.4654/0.1 =  -24.654
# dxi_yBy_dmx06 =  ( 8.5168 - 2.9697)/0.1 =5.5471 /0.1 = 55.471
# sf_00 := <0.4785, -2.578>;
# xi_x00 := -1.6809 ;
# xi_y00 :=  2.9697;
# xi_00 := <-1.6809, 2.9697>;
# xi_x_targ := 0.0;
# xi_y_targ := 0.0;
# xi_targ := <0.0, 0.0>;
# M_emp := <<-20.142, -24.654> | <59.393, 55.471>>;
# M_empi := MatrixInverse(M_emp);
# sf := sf_00 + M_empi.(-xi_00 + xi_targ);
# 
 #                           [    0.4785    ]
#                    sf_00 := [              ]
#                            [&uminus0;2.578]
#                       xi_x00 := -1.6809
#                        xi_y00 := 2.9697
#                            [&uminus0;1.6809]
#                   xi_00 := [               ]
#                            [    2.9697     ]
#                        xi_x_targ := 0.
#                        xi_y_targ := 0.
#                                   [0.]
#                        xi_targ := [  ]
#                                   [0.]
#                        [&uminus0;20.142  59.393]
#               M_emp := [                       ]
#                        [&uminus0;24.654  55.471]
#            [0.159868860902880   &uminus0;0.171172166638509 ]
#  M_empi := [                                               ]
#            [0.0710534675181554  &uminus0;0.0580497664780841]
#                       [    1.25555355155803            ]
#               sf := [                                               ]
#                       [&uminus0;2.28617583493877]
#   mx05     mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
#  MXS              MXL                Qx-0             Qy-0                  Qx-1             Qy-1                 Qx-2           Qy-2     
1.255500  -2.286170   -2.8023    0.5605        81.8286    82.3891        -1.1209    82.1088
  #--------------------------------------------------------------------------------------------------------------------------
# Energy shift too great
#
#double Delta_delta_e = 0.0001;   // fractional energy step size
#  // so Delta_delta = 0.0001/beta = 0.0001/0.459 = 0.0002178;
#
#  double x_nom = 0.00001; //  0.00001;  // 0.005;      // nominal horizontal amplitude 
#  double y_nom = 0.00001; //  0.00001;  // 0.005;      // nominal vertical amplitude 
#
#$dlta = 0.0002178;
#$xi_x_fac = 1;   # -1;  // This factor can be introduced later, in order to supply
#$xi_y_fac = 1;   # -1;  // the "aliasing" correction for fractional tunes greater than 0.5.
#
#   mx05       mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
#    MXS              MXL                Qx-0             Qy-0                  Qx-1             Qy-1                 Qx-2           Qy-2      
0.478500  -2.578000   -4.4837    -3.9233        7.2861    7.2861        -4.2035    7.2861
1.478500  -2.578000   0.5605    1.1209        15.1327    15.1327        0.8407    15.1327
0.478500  -3.578000   -5.0442    -4.4837        2.2419    2.8023        -4.7640    2.5221
 # superficially
# dQxBydSf = (0.8407 + 4.2035)/1.0  = 5.04
# dQyBydSf = (15.1327-7.2861)/1.0   =  7.8
# dQxBydSd = (-4.7640+4.2035)/-1.0 =  0.5605
# dQyBydSd = (2.5221-7.2861)/-1.0   =  4.76451
#--------------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------------
# Mon May  4 14:30:52 EDT 2020                                         
#  Investigate initial off-momentum coordinates-ok
#Tue May  5 09:25:52 EDT 2020
#tracker-mx10-mx06.cc
#-------------------------------
#------------------------------------------------------------------------------------------------------------------------
##     name         suml                    betax            alfax           qx                  dx             betay          alfay             qy             dy        
#------------------------------------------------------------------------------------------------------------------------
#    0 tum          0.0000000e+00  2.022e+01 -7.484e-01  0.000e+00  1.102e+01  7.371e+00 -2.681e-01  0.000e+00  0.000e+00
#    1 -            0.0000000e+00  2.022e+01 -7.484e-01  0.000e+00  1.102e+01  7.371e+00 -2.681e-01  0.000e+00  0.000e+00
#    2 qu23         1.2400000e-01  2.041e+01 -7.580e-01  9.715e-04  1.103e+01  7.439e+00 -2.861e-01  2.665e-03  0.000e+00
#    3 -            4.9600000e-01  1.998e+01  1.887e+00  3.880e-03  1.081e+01  8.050e+00 -1.382e+00  1.038e-02  0.000e+00
#    4 msh41        6.4930000e-01  1.941e+01  1.852e+00  5.119e-03  1.060e+01  8.482e+00 -1.438e+00  1.333e-02  0.000e+00
#                                                         dx' = (10.60-11.03)/(0.6493)=-0.662
#
# double Delta_delta_e = 0.0001;   // fractional energy step size
#  // so Delta_delta = 0.0001/beta = 0.0001/0.459 = 0.0002178;
#
#  double x_nom = 0.00001;  // 0.005;      // nominal horizontal amplitude 
#  double y_nom = 0.00001;  // 0.005;      // nominal vertical amplitude 
#
#  double Dx_nom = 11.02; 
#  double Dxp_nom =  -0.662; 
#
# int turns = 8192;
#
#   const char* b1f="^qu2$|^qu3$|^qu10$|^qu11$|^qu14$|^qu15$|^qu22$|^qu23$|^qu6$|^qu7$|^qu18$|^qu19$";
#   const char* b1d="^qu1$|^qu4$|^qu5$|^qu8$|^qu9$|^qu12$|^qu13$|^qu16$|^qu17$|^qu20$|^qu21$|^qu24$";
#
#  //  const char* b2f="^mx07$|^mx16$|^mx05$|^mx09$^mx14$|^mx18$";      //  MXG MXS 
#  //  const char* b2d="^mx06$|^mx08$|^mx15$|^mx17$|";                                  //  MXL 
#
#   const char* b2f="^mx10$";       
#   const char* b2d="^mx06$";      //  MXL, 
#
##$dlta = 0.0002178;
##$xi_x_fac = 1;   # -1;  // This factor can be introduced later, in order to supply
##$xi_y_fac = 1;   # -1;  // the "aliasing" correction for fractional tunes greater than 0.5.
##
#       Sf            Sd
##   mx10      mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
###    MXS              MXL                Qx-0             Qy-0                  Qx-1             Qy-1                 Qx-2           Qy-2      
0.000000  0.000000   -5.6047    -5.0442        12.8908    13.4513        -5.3244    13.1711
0.200000  0.000000   -4.4837    -4.4837        14.5722    15.1327        -4.4837    14.8525
0.000000  0.200000   -5.0442    -5.0442        14.0118    14.5722        -5.0442    14.2920

# Delta_Sf = 0.2
# Delta_Sd= 0.2

# Delta_xi_x_Sf = (-4.4837 + 5.3244)   = 0.8407
# Delta_xi_y_Sf = (14.8525 - 13.1711 ) = 1.6814
# Delta_xi_x_Sd = ( -5.0442 + 5.3244 ) = 0.2802
# Delta_xi_y_Sd = (14.2920 - 13.1711) = 1.1209

# M_x_Sf = Delta_xi_x_Sf/Delta_Sf   = 0.8407/0.2 = 4.2035
# M_y_Sf = Delta_xi_y_Sf/Delta_Sf   = 1.6814/0.2 = 8.4070
# M_x_Sd = Delta_xi_x_Sf/Delta_Sd  = 0.2802/0.2 = 1.4010
# M_y_Sd = Delta_xi_y_Sf/Delta_Sd  = 1.1209/0.2 = 5.6045
#
#                   [4.203500000  1.401000000]
#               M := [                        ]
#                  [8.407000000  5.604500000]
#
          [    0.475751537496842       &uminus0;0.118927273446887]
 Mi := [                                                      ]
          [&uminus0;0.713648528099911      0.356824264049955     ]
##
#                                        [0.]
#                        xi_targ := [  ]
#                                        [0.]
#                               [    4.09949449754447            ]
#             Delta_S := [                                               ]
#                              [&uminus0;8.49951828724353]
#                              [    4.09949449754447             ]
#              S_new := [                                                ]
#                              [&uminus0;8.49951828724353]

#
##              Qx-0                       MXS           MXL                  
###                                        0.0000001  0.2000001 
# 0.44287109 39.592869  
# 0.44299316 168.17734   
# 0.44311523 74.985473   
##              Qy-0       
##                                        0.0000001  0.2000001 
#0.28613281 108.67803   
#0.28625488 1000
# 0.28637695 138.99334       
# #                Qx-1                        
##                                        0.0000001  0.2000001 
#0.44177246 120.6145
#0.44189453 1000
#0.4420166 159.26058
##                 Qy-1         
##                                        0.0000001  0.2000001 
#0.28918457 325.30605
#0.28930664 1000
#0.28942871 929.87962
##              Qx-2                  
##                                        0.0000001  0.2000001 
#0.44067383 2.5088848
#0.4407959 195.12901
#0.44091797 2.4410411
##               Qy-2      
##                                        0.0000001  0.2000001 
#0.2923584 436.15234
#0.29248047 1000
#0.29260254 232.8496
##                                             MXS         MXL      
##                                        0.2000001  0.0000001 
##              Qx-0        
##                                        0.2000001  0.0000001 
##              Qy-0       
##                                        0.2000001  0.0000001 
##              Qx-1                        
##                                        0.2000001  0.0000001 
##              Qy-1         
##                                        0.2000001  0.0000001 
##              Qx-2                  
##                                        0.2000001  0.0000001 
##              Qy-2      
#
#       Sf            Sd
##   mx10      mx06      xi_x_mi     xi_x_pl       xi_y_mi        xi_y_pl         xi_x            xi_y
###    MXS              MXL                Qx-0             Qy-0                  Qx-1             Qy-1                 Qx-2           Qy-2      
4.099494  -8.499518   3.9233    3.9233        6.7256    3.9233        3.9233    5.3244
2.866700  -7.600000   0.0000    0.0000        -1.1209    -2.8023        0.0000    -1.9616
3.066700  -7.600000   0.5605    1.1209        1.1209    -1.1209        0.8407    0.0000
2.866700  -7.400000   0.0000    0.5605        0.0000    -1.6814        0.2802    -0.8407


# Delta_Sf = 0.2
# Delta_Sd= 0.2

# Delta_xi_x_Sf = (-4.4837 + 5.3244)   = 0.8407
# Delta_xi_y_Sf = (14.8525 - 13.1711 ) = 1.6814
# Delta_xi_x_Sd = ( -5.0442 + 5.3244 ) = 0.2802
# Delta_xi_y_Sd = (14.2920 - 13.1711) = 1.1209

# M_x_Sf = Delta_xi_x_Sf/Delta_Sf   = 0.8407/0.2 = 4.2035
# M_y_Sf = Delta_xi_y_Sf/Delta_Sf   = 1.6814/0.2 = 8.4070
# M_x_Sd = Delta_xi_x_Sf/Delta_Sd  = 0.2802/0.2 = 1.4010
# M_y_Sd = Delta_xi_y_Sf/Delta_Sd  = 1.1209/0.2 = 5.604

